// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectReceitas.Data.Context;

namespace ProjectReceitas.Api.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20191019121958_ProjectReceitas_v1")]
    partial class ProjectReceitas_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectReceitas.Domain.Domain.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HoraPreparo");

                    b.Property<int>("MinutoPreparo");

                    b.Property<string>("Nome");

                    b.Property<int>("Rendimento");

                    b.HasKey("Id");

                    b.ToTable("Receita");
                });

            modelBuilder.Entity("ProjectReceitas.Domain.Domain.ReceitaIngrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<int?>("ReceitaId");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.ToTable("ReceitaIngrediente");
                });

            modelBuilder.Entity("ProjectReceitas.Domain.Domain.ReceitaModoPreparo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<int?>("ReceitaId");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.ToTable("ReceitaModoPreparo");
                });

            modelBuilder.Entity("ProjectReceitas.Domain.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("Login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Nicholas",
                            Nome = "Nicholas",
                            Senha = "123"
                        },
                        new
                        {
                            Id = 2,
                            Login = "Andre",
                            Nome = "Andre",
                            Senha = "123"
                        },
                        new
                        {
                            Id = 3,
                            Login = "Wallace",
                            Nome = "Wallace",
                            Senha = "123"
                        },
                        new
                        {
                            Id = 4,
                            Login = "Moraes",
                            Nome = "Moraes",
                            Senha = "123"
                        });
                });

            modelBuilder.Entity("ProjectReceitas.Domain.Domain.ReceitaIngrediente", b =>
                {
                    b.HasOne("ProjectReceitas.Domain.Domain.Receita", "Receita")
                        .WithMany("Ingredientes")
                        .HasForeignKey("ReceitaId");
                });

            modelBuilder.Entity("ProjectReceitas.Domain.Domain.ReceitaModoPreparo", b =>
                {
                    b.HasOne("ProjectReceitas.Domain.Domain.Receita", "Receita")
                        .WithMany("ModoPreparos")
                        .HasForeignKey("ReceitaId");
                });
#pragma warning restore 612, 618
        }
    }
}
